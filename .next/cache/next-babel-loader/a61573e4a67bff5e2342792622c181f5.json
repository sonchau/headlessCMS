{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/sonchau/projects/Prime_Content/components/toDo.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { atom, selector, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nvar todoListState = atom({\n  key: 'todoListState',\n  \"default\": []\n});\nexport default function TodoList() {\n  var _this = this;\n\n  var todoList = useRecoilValue(todoListState);\n  return __jsx(React.Fragment, null, __jsx(TodoListStats, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(TodoListFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(TodoItemCreator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), todoList.map(function (todoItem) {\n    return __jsx(TodoItem, {\n      key: todoItem.id,\n      item: todoItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\nfunction TodoItemCreator() {\n  var _useState = useState(''),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var setTodoList = useSetRecoilState(todoListState);\n\n  var addItem = function addItem() {\n    setTodoList(function (oldTodoList) {\n      return [].concat(_toConsumableArray(oldTodoList), [{\n        id: getId(),\n        text: inputValue,\n        isComplete: false\n      }]);\n    });\n    setInputValue('');\n  };\n\n  var onChange = function onChange(_ref) {\n    var value = _ref.target.value;\n    setInputValue(value);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: inputValue,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n} // utility for creating unique Id\n\n\nvar id = 0;\n\nfunction getId() {\n  return id++;\n} /////////////\n\n\nfunction TodoItem(_ref2) {\n  var item = _ref2.item;\n\n  var _useRecoilState = useRecoilState(todoListState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      todoList = _useRecoilState2[0],\n      setTodoList = _useRecoilState2[1];\n\n  var index = todoList.findIndex(function (listItem) {\n    return listItem === item;\n  });\n\n  var editItemText = function editItemText(_ref3) {\n    var value = _ref3.target.value;\n    var newList = replaceItemAtIndex(todoList, index, _objectSpread({}, item, {\n      text: value\n    }));\n    setTodoList(newList);\n  };\n\n  var toggleItemCompletion = function toggleItemCompletion() {\n    var newList = replaceItemAtIndex(todoList, index, _objectSpread({}, item, {\n      isComplete: !item.isComplete\n    }));\n    setTodoList(newList);\n  };\n\n  var deleteItem = function deleteItem() {\n    var newList = removeItemAtIndex(todoList, index);\n    setTodoList(newList);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: item.text,\n    onChange: editItemText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: item.isComplete,\n    onChange: toggleItemCompletion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: deleteItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"X\"));\n}\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [].concat(_toConsumableArray(arr.slice(0, index)), [newValue], _toConsumableArray(arr.slice(index + 1)));\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [].concat(_toConsumableArray(arr.slice(0, index)), _toConsumableArray(arr.slice(index + 1)));\n} ////////////// Selector\n\n\nvar todoListFilterState = atom({\n  key: 'todoListFilterState',\n  \"default\": 'Show All'\n});\nvar filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: function get(_ref4) {\n    var _get = _ref4.get;\n\n    var filter = _get(todoListFilterState);\n\n    var list = _get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter(function (item) {\n          return item.isComplete;\n        });\n\n      case 'Show Uncompleted':\n        return list.filter(function (item) {\n          return !item.isComplete;\n        });\n\n      default:\n        return list;\n    }\n  }\n});\n\nfunction TodoListFilters() {\n  var _useRecoilState3 = useRecoilState(todoListFilterState),\n      _useRecoilState4 = _slicedToArray(_useRecoilState3, 2),\n      filter = _useRecoilState4[0],\n      setFilter = _useRecoilState4[1];\n\n  var updateFilter = function updateFilter(_ref5) {\n    var value = _ref5.target.value;\n    setFilter(value);\n  };\n\n  return __jsx(React.Fragment, null, \"Filter:\", __jsx(\"select\", {\n    value: filter,\n    onChange: updateFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, __jsx(\"option\", {\n    value: \"Show All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"All\"), __jsx(\"option\", {\n    value: \"Show Completed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Completed\"), __jsx(\"option\", {\n    value: \"Show Uncompleted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Uncompleted\")));\n} /////////\n\n\nvar todoListStatsState = selector({\n  key: 'todoListStatsState',\n  get: function get(_ref6) {\n    var _get2 = _ref6.get;\n\n    var todoList = _get2(filteredTodoListState);\n\n    var totalNum = todoList.length;\n    var totalCompletedNum = todoList.filter(function (item) {\n      return item.isComplete;\n    }).length;\n    var totalUncompletedNum = totalNum - totalCompletedNum;\n    var percentCompleted = totalNum === 0 ? 0 : totalCompletedNum / totalNum;\n    return {\n      totalNum: totalNum,\n      totalCompletedNum: totalCompletedNum,\n      totalUncompletedNum: totalUncompletedNum,\n      percentCompleted: percentCompleted\n    };\n  }\n});\n\nfunction TodoListStats() {\n  //const  todoListStatsStateValue = useRecoilValue(todoListStatsState);\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/sonchau/projects/Prime_Content/components/toDo.tsx"],"names":["React","useState","atom","selector","useRecoilState","useRecoilValue","useSetRecoilState","todoListState","key","TodoList","todoList","map","todoItem","id","TodoItemCreator","inputValue","setInputValue","setTodoList","addItem","oldTodoList","getId","text","isComplete","onChange","value","target","TodoItem","item","index","findIndex","listItem","editItemText","newList","replaceItemAtIndex","toggleItemCompletion","deleteItem","removeItemAtIndex","arr","newValue","slice","todoListFilterState","filteredTodoListState","get","filter","list","TodoListFilters","setFilter","updateFilter","todoListStatsState","totalNum","length","totalCompletedNum","totalUncompletedNum","percentCompleted","TodoListStats"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAEEC,IAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,iBANF,QAOO,QAPP;AAUA,IAAMC,aAAa,GAAGL,IAAI,CAAC;AACzBM,EAAAA,GAAG,EAAE,eADoB;AAEzB,aAAS;AAFgB,CAAD,CAA1B;AAKA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,MAAMC,QAAQ,GAAGL,cAAc,CAACE,aAAD,CAA/B;AAEA,SACE,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKGG,QAAQ,CAACC,GAAT,CAAa,UAACC,QAAD;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,MAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAb,CALH,CADF;AAWD;;AAED,SAASE,eAAT,GAA2B;AAAA,kBACWb,QAAQ,CAAC,EAAD,CADnB;AAAA,MAClBc,UADkB;AAAA,MACNC,aADM;;AAEzB,MAAMC,WAAW,GAAGX,iBAAiB,CAACC,aAAD,CAArC;;AAEA,MAAMW,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,WAAW,CAAC,UAACE,WAAD;AAAA,0CACPA,WADO,IAEV;AACEN,QAAAA,EAAE,EAAEO,KAAK,EADX;AAEEC,QAAAA,IAAI,EAAEN,UAFR;AAGEO,QAAAA,UAAU,EAAE;AAHd,OAFU;AAAA,KAAD,CAAX;AAQAN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAVD;;AAYA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,OAAuB;AAAA,QAAZC,KAAY,QAArBC,MAAqB,CAAZD,KAAY;AACtCR,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAET,UAA1B;AAAsC,IAAA,QAAQ,EAAEQ,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAMD,C,CAED;;;AACA,IAAIL,EAAE,GAAG,CAAT;;AACA,SAASO,KAAT,GAAiB;AACf,SAAOP,EAAE,EAAT;AACD,C,CAED;;;AACA,SAASa,QAAT,QAA0B;AAAA,MAAPC,IAAO,SAAPA,IAAO;;AAAA,wBACQvB,cAAc,CAACG,aAAD,CADtB;AAAA;AAAA,MACjBG,QADiB;AAAA,MACPO,WADO;;AAExB,MAAMW,KAAK,GAAGlB,QAAQ,CAACmB,SAAT,CAAmB,UAACC,QAAD;AAAA,WAAcA,QAAQ,KAAKH,IAA3B;AAAA,GAAnB,CAAd;;AAEA,MAAMI,YAAY,GAAG,SAAfA,YAAe,QAAuB;AAAA,QAAZP,KAAY,SAArBC,MAAqB,CAAZD,KAAY;AAC1C,QAAMQ,OAAO,GAAGC,kBAAkB,CAACvB,QAAD,EAAWkB,KAAX,oBAC7BD,IAD6B;AAEhCN,MAAAA,IAAI,EAAEG;AAF0B,OAAlC;AAKAP,IAAAA,WAAW,CAACe,OAAD,CAAX;AACD,GAPD;;AASA,MAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,QAAMF,OAAO,GAAGC,kBAAkB,CAACvB,QAAD,EAAWkB,KAAX,oBAC7BD,IAD6B;AAEhCL,MAAAA,UAAU,EAAE,CAACK,IAAI,CAACL;AAFc,OAAlC;AAKAL,IAAAA,WAAW,CAACe,OAAD,CAAX;AACD,GAPD;;AASA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMH,OAAO,GAAGI,iBAAiB,CAAC1B,QAAD,EAAWkB,KAAX,CAAjC;AAEAX,IAAAA,WAAW,CAACe,OAAD,CAAX;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEL,IAAI,CAACN,IAA/B;AAAqC,IAAA,QAAQ,EAAEU,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEJ,IAAI,CAACL,UAFhB;AAGE,IAAA,QAAQ,EAAEY,oBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAQ,IAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPF,CADF;AAWD;;AAED,SAASF,kBAAT,CAA4BI,GAA5B,EAAiCT,KAAjC,EAAwCU,QAAxC,EAAkD;AAChD,sCAAWD,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAaX,KAAb,CAAX,IAAgCU,QAAhC,sBAA6CD,GAAG,CAACE,KAAJ,CAAUX,KAAK,GAAG,CAAlB,CAA7C;AACD;;AAED,SAASQ,iBAAT,CAA2BC,GAA3B,EAAgCT,KAAhC,EAAuC;AACrC,sCAAWS,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAaX,KAAb,CAAX,sBAAmCS,GAAG,CAACE,KAAJ,CAAUX,KAAK,GAAG,CAAlB,CAAnC;AACD,C,CAGD;;;AAEA,IAAMY,mBAAmB,GAAGtC,IAAI,CAAC;AAC/BM,EAAAA,GAAG,EAAE,qBAD0B;AAE/B,aAAS;AAFsB,CAAD,CAAhC;AAKA,IAAMiC,qBAAqB,GAAGtC,QAAQ,CAAC;AACrCK,EAAAA,GAAG,EAAE,uBADgC;AAErCkC,EAAAA,GAAG,EAAE,oBAAW;AAAA,QAATA,IAAS,SAATA,GAAS;;AACd,QAAMC,MAAM,GAAGD,IAAG,CAACF,mBAAD,CAAlB;;AACA,QAAMI,IAAI,GAAGF,IAAG,CAACnC,aAAD,CAAhB;;AAEA,YAAQoC,MAAR;AACE,WAAK,gBAAL;AACE,eAAOC,IAAI,CAACD,MAAL,CAAY,UAAChB,IAAD;AAAA,iBAAUA,IAAI,CAACL,UAAf;AAAA,SAAZ,CAAP;;AACF,WAAK,kBAAL;AACE,eAAOsB,IAAI,CAACD,MAAL,CAAY,UAAChB,IAAD;AAAA,iBAAU,CAACA,IAAI,CAACL,UAAhB;AAAA,SAAZ,CAAP;;AACF;AACE,eAAOsB,IAAP;AANJ;AAQD;AAdoC,CAAD,CAAtC;;AAkBA,SAASC,eAAT,GAA2B;AAAA,yBACGzC,cAAc,CAACoC,mBAAD,CADjB;AAAA;AAAA,MAClBG,MADkB;AAAA,MACVG,SADU;;AAGzB,MAAMC,YAAY,GAAG,SAAfA,YAAe,QAAuB;AAAA,QAAZvB,KAAY,SAArBC,MAAqB,CAAZD,KAAY;AAC1CsB,IAAAA,SAAS,CAACtB,KAAD,CAAT;AACD,GAFD;;AAIA,SACE,uCAEE;AAAQ,IAAA,KAAK,EAAEmB,MAAf;AAAuB,IAAA,QAAQ,EAAEI,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CAFF,CADF;AAUD,C,CAED;;;AACA,IAAMC,kBAAkB,GAAG7C,QAAQ,CAAC;AAClCK,EAAAA,GAAG,EAAE,oBAD6B;AAElCkC,EAAAA,GAAG,EAAE,oBAAW;AAAA,QAATA,KAAS,SAATA,GAAS;;AACd,QAAMhC,QAAQ,GAAGgC,KAAG,CAACD,qBAAD,CAApB;;AACA,QAAMQ,QAAQ,GAAGvC,QAAQ,CAACwC,MAA1B;AACA,QAAMC,iBAAiB,GAAGzC,QAAQ,CAACiC,MAAT,CAAgB,UAAChB,IAAD;AAAA,aAAUA,IAAI,CAACL,UAAf;AAAA,KAAhB,EAA2C4B,MAArE;AACA,QAAME,mBAAmB,GAAGH,QAAQ,GAAGE,iBAAvC;AACA,QAAME,gBAAgB,GAAGJ,QAAQ,KAAK,CAAb,GAAiB,CAAjB,GAAqBE,iBAAiB,GAAGF,QAAlE;AAEA,WAAO;AACLA,MAAAA,QAAQ,EAARA,QADK;AAELE,MAAAA,iBAAiB,EAAjBA,iBAFK;AAGLC,MAAAA,mBAAmB,EAAnBA,mBAHK;AAILC,MAAAA,gBAAgB,EAAhBA;AAJK,KAAP;AAMD;AAfiC,CAAD,CAAnC;;AAkBA,SAASC,aAAT,GAAyB;AACvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD","sourcesContent":["import React, {useState} from 'react';\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState\n} from 'recoil';\n\n\nconst todoListState = atom({\n  key: 'todoListState',\n  default: [],\n});\n\nexport default function TodoList() {\n  const todoList = useRecoilValue(todoListState);\n\n  return (\n    <>\n      <TodoListStats />\n      <TodoListFilters /> \n      <TodoItemCreator />\n\n      {todoList.map((todoItem) => (\n        <TodoItem key={todoItem.id} item={todoItem} />\n      ))}\n    </>\n  );\n}\n\nfunction TodoItemCreator() {\n  const [inputValue, setInputValue] = useState('');\n  const setTodoList = useSetRecoilState(todoListState);\n\n  const addItem = () => {\n    setTodoList((oldTodoList) => [\n      ...oldTodoList,\n      {\n        id: getId(),\n        text: inputValue,\n        isComplete: false,\n      },\n    ]);\n    setInputValue('');\n  };\n\n  const onChange = ({target: {value}}) => {\n    setInputValue(value);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={inputValue} onChange={onChange} />\n      <button onClick={addItem}>Add</button>\n    </div>\n  );\n}\n\n// utility for creating unique Id\nlet id = 0;\nfunction getId() {\n  return id++;\n}\n\n/////////////\nfunction TodoItem({item}) {\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const index = todoList.findIndex((listItem) => listItem === item);\n\n  const editItemText = ({target: {value}}) => {\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...item,\n      text: value,\n    });\n\n    setTodoList(newList);\n  };\n\n  const toggleItemCompletion = () => {\n    const newList = replaceItemAtIndex(todoList, index, {\n      ...item,\n      isComplete: !item.isComplete,\n    });\n\n    setTodoList(newList);\n  };\n\n  const deleteItem = () => {\n    const newList = removeItemAtIndex(todoList, index);\n\n    setTodoList(newList);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={item.text} onChange={editItemText} />\n      <input\n        type=\"checkbox\"\n        checked={item.isComplete}\n        onChange={toggleItemCompletion}\n      />\n      <button onClick={deleteItem}>X</button>\n    </div>\n  );\n}\n\nfunction replaceItemAtIndex(arr, index, newValue) {\n  return [...arr.slice(0, index), newValue, ...arr.slice(index + 1)];\n}\n\nfunction removeItemAtIndex(arr, index) {\n  return [...arr.slice(0, index), ...arr.slice(index + 1)];\n}\n\n\n////////////// Selector\n\nconst todoListFilterState = atom({\n  key: 'todoListFilterState',\n  default: 'Show All',\n});\n\nconst filteredTodoListState = selector({\n  key: 'filteredTodoListState',\n  get: ({get}) => {\n    const filter = get(todoListFilterState);\n    const list = get(todoListState);\n\n    switch (filter) {\n      case 'Show Completed':\n        return list.filter((item) => item.isComplete);\n      case 'Show Uncompleted':\n        return list.filter((item) => !item.isComplete);\n      default:\n        return list;\n    }\n  },\n});\n\n\nfunction TodoListFilters() {\n  const [filter, setFilter] = useRecoilState(todoListFilterState);\n\n  const updateFilter = ({target: {value}}) => {\n    setFilter(value);\n  };\n\n  return (\n    <>\n      Filter:\n      <select value={filter} onChange={updateFilter}>\n        <option value=\"Show All\">All</option>\n        <option value=\"Show Completed\">Completed</option>\n        <option value=\"Show Uncompleted\">Uncompleted</option>\n      </select>\n    </>\n  );\n}\n\n/////////\nconst todoListStatsState = selector({\n  key: 'todoListStatsState',\n  get: ({get}) => {\n    const todoList = get(filteredTodoListState);\n    const totalNum = todoList.length;\n    const totalCompletedNum = todoList.filter((item) => item.isComplete).length;\n    const totalUncompletedNum = totalNum - totalCompletedNum;\n    const percentCompleted = totalNum === 0 ? 0 : totalCompletedNum / totalNum;\n\n    return {\n      totalNum,\n      totalCompletedNum,\n      totalUncompletedNum,\n      percentCompleted,\n    };\n  },\n});\n\nfunction TodoListStats() {\n  //const  todoListStatsStateValue = useRecoilValue(todoListStatsState);\n\n  return (\n    <ul>\n\n    </ul>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}